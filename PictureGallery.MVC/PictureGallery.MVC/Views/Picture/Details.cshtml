@using PictureGallery.Application
@model PictureViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>@Model.Picture.Title Details</h1>

<div>
    <hr />
    <dl class="row">
        <div class="details-property-container">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Picture.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Picture.Title)
            </dd>
        </div>
        <div class="details-property-container">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Picture.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Picture.Description)
            </dd>
        </div>
        <div class="details-property-container">
            <dt class="col-sm-2">
                Create Date
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Picture.CreateDate)
            </dd>
        </div>
        

        <a href="~/images/@Model.Picture.ImageName" data-lightbox="image-gallery" data-title="@Model.Picture.Title">
            <img class="details-img" src="~/images/@Model.Picture.ImageName" />
        </a>
        @* <img class="details-img" src="~/images/@Model.ImageName" /> *@
    </dl>
</div>
<div>
    @if (Model.User != null && Model.Picture.CreatedById == Model.User.Id)
    {
    <a asp-controller="Picture" asp-action="Edit" asp-route-encodedTitle="@Model.Picture.EncodedTitle" class="btn btn-outline-secondary">Edit</a>
    }
    <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
</div>

<style>
    .details-property-container {
        display: flex;
        flex-direction: row;
        height: 30px;
    }
    .details-img {
        height: 30rem;
        margin-top: 30px;
        margin-bottom: 30px;
        object-fit: cover;
        width: auto;
    }
</style>
